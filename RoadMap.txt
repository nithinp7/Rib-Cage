ROADMAP

This is going to remain a loose collection of experiments and features until a coherent game / engine takes
shape

Animation Systems:
- Decouple animation player from Model
- Allow multiple simultaneous animations in single model 
-   requires animation blending logic
- animation blends: constant, ramps, transitions...
- Can "glue" blended animations and create "CompoundAnimations"
- From there "AnimationStateMachine" 
-   abstraction layer to expression async logic of CompoundAnimations, transitions, cycles, etc

Skeleton / Rigging:
- What can we do with the rudimentary "SkeletonEditor" prototype...
- Maybe can take core bones / anims from imported animations...
-     and can author interpolated deformation bones, which can be subject to
      physics or otherwise procedural deformations...


gameplay prototype
- rotor animations
- basic flight controller for helicopter
- simple foliage / wind

blocking pipeline work:
- hammer out workflow to export from blender --> Althea
- uv mapping, PBR textures
- ...animations!

blocking systems work:
- rigid body collision detection 
- eventually rigid body physics solver
- generic skinning framework

Future areas to explore:
- procedural animation
- IK solver 
- skeleton / constraint editor
